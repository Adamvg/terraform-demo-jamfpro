name: "Terraform setup and apply"
description: "Applys a terraform plan file from an artifact"
inputs:
  terraform_working_directory:
    description: 'where to execute terraform'
    required: true
  terraform_version: 
    description: 'Jamf Pro Terraform Version'
    required: true
    default: 1.7.5
  terraform_cloud_api_token: 
    description: 'Terraform cloud token'
    required: true
  github_token: 
    description: 'github secret'
    required: true
  pr_id:
    description: 'Pull request ID'
    required: true
  jamfpro_client_secret:
    description: 'JAMF Pro service client secret used for Terraform actions'
    required: true
  jamfpro_client_id: 
    description: 'JAMF Pro service clientID used for Terraform actions'
    required: true
  jamfpro_instance_name: 
    description: 'JAMF Pro instance name e.g for https://mycompany.jamfcloud.com , use mycompany'
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token:  ${{ inputs.terraform_cloud_api_token }}
        terraform_version: ${{ inputs.terraform_version }}
        terraform_wrapper: false

    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.terraform_working_directory }}
      shell: bash
      run: |
        terraform init

    - name: Download Plan
      id: download-plan
      uses: dawidd6/action-download-artifact@v3.1.2
      with:
        github_token: ${{ inputs.github_token }}
        workflow: plan.yaml
        pr: ${{ inputs.pr_id }}
        name: ${{ inputs.pr_id }}-tf-plan
        path: ${{ inputs.terraform_working_directory }}

    - name: Terraform Apply
      id: apply
      working-directory: ${{ inputs.terraform_working_directory }}
      shell: bash
      run: |
        echo 'apply<<EOF' >> $GITHUB_OUTPUT
        terraform apply -input=false -no-color tfplan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Comment Apply
      id: comment-apply
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_id }}
        body: |
          Terraform Apply:

          ```
          ${{ steps.apply.outputs.apply }}
name: "05 - terraform apply to: production"

on:
  pull_request:
    types: [closed]
    branches: [production]

env:
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"

permissions:
  contents: read
  id-token: write

jobs:
  check-branch:
    runs-on: ubuntu-latest
    steps:
    - name: Check if running on a release branch
      uses: actions/github-script@v7.0.1
      with:
        script: |
          const branchName = context.ref.replace('refs/heads/', '');
          console.log(`Current branch: ${branchName}`);
          if (!branchName.startsWith('release-v')) {
            core.setFailed('This workflow can only be run from a release branch (branch name starting with "release-v").');
          }

  terraform-apply:
    uses: ./.github/workflows/terraform-apply.yml
    needs: check-branch
    with:
      tf_cloud_organization: "deploymenttheory"
      tf_workspace: "terraform-jamfpro-production"
      config_directory: "workload/terraform/jamfpro"
      debug: true
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

  branch-cleanup:
    needs: [terraform-apply]
    uses: ./.github/workflows/branch-cleanup.yml
    with:
      branch_name: ${{ github.event.pull_request.head.ref }}
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

  send-notification:
    needs: [terraform-apply]
    if: always()
    uses: ./.github/workflows/send-notification.yml
    with:
      environment: "production"
      result: ${{ needs.terraform-apply.result == 'success' && 'success' || 'failure' }}
      notification_channel: msteams
    secrets: inherit
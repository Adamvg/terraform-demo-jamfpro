name: "Versioning and Release with Environment Checks"

on:
  workflow_dispatch:
    inputs:
      target_environment:
        description: 'Target environment (staging or production)'
        required: true
        type: choice
        options:
          - staging
          - production

env:
  TF_CLOUD_ORGANIZATION: "deploymenttheory"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  CONFIG_DIRECTORY: "workload/terraform/jamfpro"

jobs:
  verify-and-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Set Terraform workspace
        id: set_workspace
        run: |
          if [[ "${{ github.event.inputs.target_environment }}" == "production" ]]; then
            echo "TF_WORKSPACE=terraform-jamfpro-production" >> $GITHUB_ENV
          else
            echo "TF_WORKSPACE=terraform-jamfpro-staging" >> $GITHUB_ENV
          fi

      - name: Print Environment Variables
        run: |
          echo "Printing all environment variables:"
          env | sort

      - name: Verify Terraform Cloud API Token
        run: |
          if [ -z "$TF_API_TOKEN" ]; then
            echo "Error: TF_API_TOKEN is not set"
            exit 1
          else
            echo "TF_API_TOKEN is set (value hidden for security)"
          fi

      - name: Check Workspace Existence
        run: |
          response=$(curl -s \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            "https://app.terraform.io/api/v2/organizations/$TF_CLOUD_ORGANIZATION/workspaces/$TF_WORKSPACE")
          
          if echo $response | grep -q "Not found"; then
            echo "Error: Workspace $TF_WORKSPACE not found in organization $TF_CLOUD_ORGANIZATION"
            exit 1
          else
            echo "Workspace $TF_WORKSPACE exists in organization $TF_CLOUD_ORGANIZATION"
          fi

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.1
        id: plan-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.1
        id: plan-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true
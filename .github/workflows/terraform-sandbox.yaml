name: "Promote to Sandbox"

on:
  push:
    branches:
      - 'feature-*'
      - 'bugfix-*'
      - 'release-*'
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch to promote to Sandbox (must start with feature-, bugfix-, or release-)'
        required: true
        default: 'release-'

env:
  TF_CLOUD_ORGANIZATION: "deploymenttheory"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "terraform-jamfpro-sandbox"
  CONFIG_DIRECTORY: "workload/terraform/jamfpro"
  PIPELINE_DEBUG: "true"
  # other env vars are set within tfcloud directly for within the tf workspace

jobs:
  terraform-apply:
    if: >
      github.repository != 'hashicorp-education/learn-terraform-github-actions' &&
      (
        github.event_name == 'workflow_dispatch' ||
        startsWith(github.ref, 'refs/heads/feature-') ||
        startsWith(github.ref, 'refs/heads/bugfix-') ||
        startsWith(github.ref, 'refs/heads/release-')
      )
    name: "Terraform Apply to Sandbox"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      
      - name: Validate Branch Name
        if: github.event_name == 'workflow_dispatch'
        run: |
          branch="${{ github.event.inputs.branch_name }}"
          if [[ ! "$branch" =~ ^(feature|bugfix|release)- ]]; then
            echo "Error: Branch name must start with 'feature-', 'bugfix-', or 'release-'"
            exit 1
          fi
      
      - name: Print Terraform Variables
        if: env.PIPELINE_DEBUG == 'true'
        run: |
          echo "auth_method=${{ env.jamfpro_auth_method }}"
          echo "client_id=${{ secrets.sandbox_jamfpro_client_id }}"
          echo "client_secret=${{ secrets.sandbox_jamfpro_client_secret }}"
          echo "instance_fqdn=${{ secrets.sandbox_jamfpro_instance_fqdn }}"
          echo "load_balancer_lock=${{ env.jamfpro_jamf_load_balancer_lock }}"
          echo "log_level=${{ env.jamfpro_log_level }}"
          echo "log_output_format=${{ env.jamfpro_log_output_format }}"
          echo "mandatory_request_delay_milliseconds=${{ env.jamfpro_mandatory_request_delay_milliseconds }}"
          echo "token_refresh_buffer_period_seconds=${{ env.jamfpro_token_refresh_buffer_period_seconds }}"

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.1
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.1
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.3.1
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"